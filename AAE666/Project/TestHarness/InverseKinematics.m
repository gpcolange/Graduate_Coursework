%% Determine Euler Inverse Kinematics
clear
clc

syms phi(t) theta(t) psi(t) thetadot(t) phidot(t) psidot(t) thetaddot phiddot psiddot;

C = 1/cos(theta)*[0 sin(phi) cos(phi); 0 cos(phi)*cos(theta) -sin(phi)*cos(theta); cos(theta) sin(phi)*sin(theta) cos(phi)*sin(theta)];

subs(simplify(diff(inv(C),t)),[diff(phi(t), t);diff(theta(t), t)],[phidot;thetadot]);

ans - [-thetadot*cos(theta), 0 ,0;...
       phidot*cos(phi)*cos(theta) - thetadot*sin(phi)*sin(theta), -phidot*sin(phi), 0;...
       -phidot*sin(phi)*cos(theta) - thetadot*cos(phi)*sin(theta), -phidot*cos(phi),0];

% Schaub and junkins 3.56
w = inv(C)*[psidot;thetadot;phidot];

wdot = subs(simplify(diff(w,t)),[diff(phi(t), t);diff(theta(t), t);diff(thetadot(t), t);diff(phidot(t), t);diff(psidot(t), t)],[phidot;thetadot;thetaddot;phiddot;psiddot]);

wdotc   =   [-sin(theta), 0, 1;...
            cos(theta)*sin(phi), cos(phi), 0;...
            cos(phi)*cos(theta), -sin(phi), 0]*[psiddot;thetaddot;phiddot]...
           +... 
            [-thetadot*cos(theta), 0 ,0;...
            phidot*cos(phi)*cos(theta) - thetadot*sin(phi)*sin(theta), -phidot*sin(phi), 0;...
            -phidot*sin(phi)*cos(theta) - thetadot*cos(phi)*sin(theta), -phidot*cos(phi),0]...
            *[psidot;thetadot;phidot];
